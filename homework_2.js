"кот" > "код"; //true: т стоит дальше д в юникод таблице и имеет больший вес
"2" + 2 * "2"; //44: конкатенация первым действием потом приведение к числу 
undefined == null; //true: null только null  и undefined при не строгом равенстве
undefined === null; //false: при строгом равенстве null  равен только null
null == 0; //false: null только null  и undefined при не строгом равенстве
2 > "3"; //false: сравнение приводит к числу в данной ситуации 
null - false + true; //1: 0 - 0 + 1 
1 / "l"; // NaN: второй операнд строка
"2" * "3"; //6: все операторы кроме бинарного плюса приводят к числу
4 + 5 + "O"; //90: первые два числа складываем потом конкатенация строк
"l" + 4 + 5; //"l45": конкатенация так как первая строка стоит
"4" - 2; //2: 4 - 2
"4" - "4x"; //NaN: 4 - cтрока
null == false; //false: null только null  и undefined при не строгом равенстве
" -4 "/ 0 + 1; //-infinity при деление на 0 -бесконечность, +1 особо ничего не поменяет
null + 1; //1: 0 + 1
undefined + null; //0: 0 + 0
let new 'new'